variables:
  appName: revu-web-dev
  # poolName: revu-pool
  azureResourceConnection: Revu Resources
  resourceGroup: revu
  webAppName: revu-web-dev
  buildCommand: run build
  startCommand: npm start
 
trigger:
  - development
 
stages:
  - stage: Build
    displayName: Build Stage
    jobs:
      - job: Build
        workspace:
          clean: all
 
        # pool:
        #   name: $(poolName)
 
        steps:
          - task: Npm@1
            displayName: "npm install"
            inputs:
              command: "install"
 
          - task: Npm@1
            displayName: "npm build"
            inputs:
              command: "custom"
              customCommand: "$(buildCommand)"
          
          - task: Npm@1
            displayName: "npm prune --production"
            inputs:
              command: "custom"
              customCommand: "prune --production"
 
          - task: DeleteFiles@1
            displayName: "Del .git Folder"
            inputs:
              SourceFolder: '.git'
              Contents: '*'
              RemoveSourceFolder: true
              
          - task: ArchiveFiles@1
            displayName: "Zip Current Folder"
            inputs:
              rootFolder: "$(System.DefaultWorkingDirectory)"
              archiveFile: "$(Build.ArtifactStagingDirectory)/$(appName)-$(Build.BuildId).zip"
              includeRootFolder: false
 
          - task: CopyFiles@2
            displayName: "Copy File to: $(TargetFolder)"
            inputs:
              SourceFolder: "$(Build.ArtifactStagingDirectory)"
              Contents: "$(appName)-$(Build.BuildId).zip"
              TargetFolder: '$(Build.ArtifactStagingDirectory)\ArtifactsToBePublished'
 
          # - task: PublishBuildArtifacts@1
          #   displayName: "Publish Artifact: drop"
          #   inputs:
          #     PathtoPublish: '$(Build.ArtifactStagingDirectory)\ArtifactsToBePublished'
 
          - task: AzureRmWebAppDeployment@4
            displayName: "Deploy Azure App Service"
            inputs:
              ConnectionType: "AzureRM"
              azureSubscription: "$(azureResourceConnection)"
              appType: "webAppLinux"
              WebAppName: "$(webAppName)"
              ResourceGroupName: "$(resourceGroup)"
              packageForLinux: $(Build.ArtifactStagingDirectory)/$(appName)-$(Build.BuildId).zip
              StartupCommand: "$(startCommand)"